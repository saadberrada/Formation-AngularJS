/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
import * as import0 from './app.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from './jqwidgets-ts/angular_jqxbargauge.ngfactory';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from './jqwidgets-ts/angular_jqxbargauge';
export class Wrapper_AppComponent {
    constructor() {
        this.changed = false;
        this.context = new import0.AppComponent();
    }
    detectChangesInternal(view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    }
}
var renderType_AppComponent_Host = null;
class _View_AppComponent_Host0 extends import1.AppView {
    constructor(viewUtils, parentInjector, declarationEl) {
        super(_View_AppComponent_Host0, renderType_AppComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('my-app', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_AppComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._AppComponent_0_4 = new Wrapper_AppComponent();
        this._appEl_0.initComponent(this._AppComponent_0_4.context, [], compView_0);
        compView_0.create(this._AppComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import0.AppComponent) && (0 === requestNodeIndex))) {
            return this._AppComponent_0_4.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        this._AppComponent_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._AppComponent_0_4.context.ngAfterViewInit();
            }
        }
    }
}
function viewFactory_AppComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AppComponent_Host === null)) {
        (renderType_AppComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_AppComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export const AppComponentNgFactory = new import9.ComponentFactory('my-app', viewFactory_AppComponent_Host0, import0.AppComponent);
const styles_AppComponent = [];
var renderType_AppComponent = null;
class _View_AppComponent0 extends import1.AppView {
    constructor(viewUtils, parentInjector, declarationEl) {
        super(_View_AppComponent0, renderType_AppComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        const parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_barGaugeReference_0 = new import10.QueryList();
        this._el_0 = this.renderer.createElement(parentRenderNode, 'angularBarGauge', null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = import11.viewFactory_jqxBarGaugeComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._jqxBarGaugeComponent_0_4 = new import11.Wrapper_jqxBarGaugeComponent(new import12.ElementRef(this._el_0));
        this._appEl_0.initComponent(this._jqxBarGaugeComponent_0_4.context, [], compView_0);
        compView_0.create(this._jqxBarGaugeComponent_0_4.context, [[]], null);
        this._viewQuery_barGaugeReference_0.reset([this._jqxBarGaugeComponent_0_4.context]);
        this.context.myBarGauge = this._viewQuery_barGaugeReference_0.first;
        this.init([], [this._el_0], [], []);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import13.jqxBarGaugeComponent) && (0 === requestNodeIndex))) {
            return this._jqxBarGaugeComponent_0_4.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        this._jqxBarGaugeComponent_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    }
}
export function viewFactory_AppComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AppComponent === null)) {
        (renderType_AppComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_AppComponent, {}));
    }
    return new _View_AppComponent0(viewUtils, parentInjector, declarationEl);
}
